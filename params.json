{
  "name": "Vectorizer",
  "tagline": "Raster to Vector Image Converter",
  "body": "# Vectorizer\r\nRaster to Vector image converter written in JS\r\n## Usage \r\n#### Include Script\r\n```\r\n<script src='app.js'></script>\r\n```\r\n#### Initialize an object and call makeVector \r\n\r\n```\r\nvar obj = new Vectorizer();\r\nobj.makeVector(url, obj.SVGToContainer);\r\n\r\n```\r\nAppends the vectorized image to the root container (you can specify container to append to).\r\n\r\n**Note:** The image URL **must** be in the same domain as the script. This is an SVG requirement in order to not to taint the canvas with foreign data.\r\n\r\n## To those working with source\r\n\r\nSet **colorquantcycles = 1** for deterministic output. Any value > 1 produces non-deterministic output. Default used is 3\r\n\r\nThe **numberofcolors** option specifies palette color count. Cubic numbers ( 2^x) are suggested for deterministic palettes. Or, you can use a custom palette altogether\r\n\r\nIt is highly recommend **against**  altering lower linear threshold and quadratic spline values. They seem to be at an empirically OK place as they are. Change them if you want to experiment. Do **not** set their value > 2; inaccuracies are observed\r\n\r\nThe **mincolorratio** option is a threshold below which anomaly and outlier pixel colors are randomized to a palette color. For an image of size 20 x 20 , a 0.01 threshold randomizes any color whose count is less than 20 x 20 x 0.01 = 4 pixels \r\n\r\n\r\n## More Usage Options\r\n\r\n``` \r\nvar obj = new Vectorizer();\r\n```\r\n#### Alert the SVG string \r\n```\r\nobj.makeVector(url,alert)\r\n```\r\n\r\n#### Append to a custom container\r\n```\r\nobj.makeVector(url, function(str){\r\n   obj.SVGToContainer(str, 'Container-id-here');\r\n});\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}